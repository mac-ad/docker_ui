name: CI/CD Docker build & push

on:
  push:
    branches:
      - main


jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    env:
      GHCR_REGISTRY: ghcr.io
      IMAGE_NAME_API: ${{ github.repository }}/api
      IMAGE_NAME_WEB: ${{ github.repository }}/web
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log into github container registry
        uses: docker/login-action@v2
        with: 
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }} 
        
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Enable pnpm via Corepack
        run: |
            corepack enable
            corepack prepare pnpm@latest --activate

      - name: Verify pnpm
        run: |
          pnpm --version

      # - name: Build docker images
        # run: |
        #   docker compose -f docker-compose.yml build
        #   docker tag docker-ui/api:latest $GHCR_REGISTRY/${{ env.IMAGE_NAME_API }}:latest
        #   docker tag docker-ui/web:latest $GHCR_REGISTRY/${{ env.IMAGE_NAME_WEB }}:latest
        #   docker push $GHCR_REGISTRY/${{ env.IMAGE_NAME_API }}:latest
        #   docker push $GHCR_REGISTRY/${{ env.IMAGE_NAME_WEB }}:latest
      
      - name: Build docker images
        run: |
          # Build and push API image
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t $GHCR_REGISTRY/${{ env.IMAGE_NAME_API }}:latest \
            -f ./apps/api/Dockerfile \
            --push \
            ./apps/api


          # Build and push Web image
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t $GHCR_REGISTRY/${{ env.IMAGE_NAME_WEB }}:latest \
            -f ./apps/web/Dockerfile \
            --push \
            ./apps/web

